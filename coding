# capstone_tripduration
Capstone Project Title: Investigating factors influencing taxi trip duration and a comparative analysis of prediction models)

#Load dataset
set1 <- read.csv("/Users/joellekoo/Downloads/all/train.csv", stringsAsFactors = FALSE, header = TRUE)

#Check for missing values in set 1
sapply(set1, function(x) sum(is.na(x)))

#Summary and structure of set1
summary(set1)
str(set1)

###
#For trial purpose only, not going to use set2 in project
#Load set2
set2 <- read.csv("/Users/joellekoo/Downloads/all/test.csv", stringsAsFactors = FALSE, header = TRUE)
#Check for missing values in set2
sapply(set2, function(x) sum(is.na(x)))
#Create columns for set2: dropoff_time and trip_duration
set2$dropoff_datetime <- as.POSIXct(NA)
set2$trip_duration <- NA
#Merge/Combine test and train sets provided to maintain consistency and avoid any bias. We will split the merged dataset later on into test and train sets.
set3 <- rbind(set1, set2)
#Convert date and time, replace missing values and examine structure and summary of merged set
set3$pickup_month <- month(set3$pickup_datetime)
set3$pickup_day <- day(set3$pickup_datetime)
set3$pickup_hour <- hour(set3$pickup_datetime)
set3$pickup_min <- minute(set3$pickup_datetime)

set3$dropoff_month <- month(set3$dropoff_datetime)
set3$dropoff_day <- day(set3$dropoff_datetime)
set3$dropoff_hour <- hour(set3$dropoff_datetime)
set3$dropoff_min <- minute(set3$dropoff_datetime)

set3$dropoff_month <- as.integer(set3$dropoff_month)
set3$dropoff_month[which(is.na(set3$dropoff_month))] <- median(set1$dropoff_month)
set3$dropoff_day[which(is.na(set3$dropoff_day))] <- median(set1$dropoff_day)
set3$dropoff_hour[which(is.na(set3$dropoff_hour))] <- median(set1$dropoff_hour)
set3$dropoff_min[which(is.na(set3$dropoff_min))] <- median(set1$dropoff_min)
set3$trip_duration[which(is.na(set3$trip_duration))] <- median(set1$trip_duration)

str(set3)
summary(set3)
###

#Convert vendor_id, passenger_count and store_and_fwd_flag from characters to integers and factors
set1$vendor_id <- as.integer(set1$vendor_id)
set1$passenger_count <- as.integer(set1$passenger_count)

set1$store_and_fwd_flag <- as.factor(set1$store_and_fwd_flag)
levels(set1$store_and_fwd_flag) <- c(0,1)
#0 is for N and 1 is for Y

#Convert pickup and dropoff date and times into month, day, hour and minute
#install.packages("lubridate")
library(lubridate)
set1$pickup_month <- month(set1$pickup_datetime)
set1$pickup_day <- day(set1$pickup_datetime)
set1$pickup_hour <- hour(set1$pickup_datetime)
set1$pickup_min <- minute(set1$pickup_datetime)

set1$dropoff_month <- month(set1$dropoff_datetime)
set1$dropoff_day <- day(set1$dropoff_datetime)
set1$dropoff_hour <- hour(set1$dropoff_datetime)
set1$dropoff_min <- minute(set1$dropoff_datetime)

#Calculate distance between pickup and dropoff locations
#install.packages("geosphere")
library(geosphere)
#install.packages("dplyr")
library(dplyr)
pickup_coord <- select(set1, c(pickup_longitude, pickup_latitude))
dropoff_coord <- select(set1, c(dropoff_longitude, dropoff_latitude))
set1$dist <- distCosine(pickup_coord, dropoff_coord)

#To avoid overlapping of variables, create new.set without pickup_datetime, dropoff_datetime, pickup_longitude, pickup_latitude, dropoff_longitude, dropoff_latitude)
#To avoid overfitting, the trip id will also not be included in the new.set
new.set <- subset(set1, select=-c(id, pickup_datetime, dropoff_datetime, pickup_longitude, pickup_latitude, dropoff_longitude, dropoff_latitude))
